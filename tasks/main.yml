---
- name: Install iptables package
  package:
    name: iptables
    state: present

- name: Determine external interfaces
  set_fact:
    external_interfaces: "{{ ansible_interfaces | reject('match','^(lo|docker)') | list }}"
  when: external_interfaces | default([]) | length == 0

- name: Create base firewall directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: root
    group: root
    mode: 0755
  loop:
    - { path: "/etc/firewall" }
    - { path: "{{ iptables_rules_dir }}", when: iptables_enabled }
    - { path: "{{ ip6tables_rules_dir }}", when: ip6tables_enabled }
  when: item.when | default(true)

- name: Ensure iptables state directory exists
  file:
    path: "{{ iptables_state_dir }}"
    state: directory
    owner: root
    group: root
    mode: '0700'
  when: iptables_enabled or ip6tables_enabled

- name: Template firewall application script
  template:
    src: apply_rules.sh.j2
    dest: /etc/firewall/apply_rules.sh
    owner: root
    group: root
    mode: '0755'
  when: iptables_enabled or ip6tables_enabled
  notify: restart firewall

- name: Generate IPv4 rules from iptables_rules variable
  iptables_rules:
    rules: "{{ iptables_rules }}"
    dest: "{{ iptables_rules_dir }}"
    owner: root
    group: root
    mode: '0644'
    name: "default"
  when: iptables_enabled
  notify: restart firewall

- name: Generate IPv6 rules from ip6tables_rules variable
  iptables_rules:
    rules: "{{ ip6tables_rules }}"
    dest: "{{ ip6tables_rules_dir }}"
    owner: root
    group: root
    mode: '0644'
    name: "default"
  when: ip6tables_enabled
  notify: restart firewall

- name: Create firewall service
  template:
    src: firewall.service.j2
    dest: /etc/systemd/system/firewall.service
    owner: root
    group: root
    mode: 0644
  register: firewall_service
  when: iptables_enabled or ip6tables_enabled
  notify: restart firewall

- name: Reload systemd daemon
  systemd:
    daemon_reload: yes
  when: firewall_service.changed

- name: Enable and start firewall service
  systemd:
    name: firewall
    state: started
    enabled: yes
  when: (iptables_enabled or ip6tables_enabled) and not ansible_check_mode

- name: Flush handlers after enabling service
  meta: flush_handlers
  when: iptables_enabled and not ansible_check_mode